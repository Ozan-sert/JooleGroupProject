@model JooleGroupProject.UI.Models.SearchViewModel

@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/Background.cshtml";
}


<div class="container" style="margin-top: 10%">

    <div style="width: 60%; margin: 0 20% 0 20%; text-align: center">
        <img src="~/Content/Resources/joole-logo.png" style="width: 50%" />
        <p style="font-size: 18px">Building Product Selection Platform</p>
        <div style="display: inline-block; align-content:center;">
            <form>
                <select id="categorySelector">
                    @foreach (var category in @Model.Categories)
                    {
                        <option value=@category.CategoryID style="background-color: white"  @(category.CategoryID == 1 ? "selected" : "")>@category.CategoryName</option>
                    }
                </select>

                <input id="subcategorySelector" type="text" placeholder="Search" class="searchBox" />

                <button id="search" class="searchButton" type="button">
                    <i class="fa-solid fa-magnifying-glass" style="color: white"></i>
                </button>
            </form>
        </div>
    </div>
</div>



@section Styles {
    <style>
        /* Custom CSS for this specific view */
        form {
            text-align: center;
            width: 600px;
            height: 30px;
        }

        select {
            display: inline-block;
            background-color: #1F71A7;
            height: 95%;
            border-radius: 5%;
            padding: 5px;
            border: 1px solid white;
            outline: none;
        }

        .searchBox {
            display: inline-block;
            margin-left: -2px;
            height: 95%;
            border-radius: 5%;
            width: 400px;
            border: 1px solid #1F71A7;
            outline: none;
        }

        .searchButton {
            display: inline-block;
            background-color: #1F71A7;
            height: 95%;
            border-radius: 10%;
            border: 1px solid white;
            outline: none;
        }
    </style>
}

@section Scripts {
    <script>
      
        $(document).ready(function () {
            $("#categorySelector").on("change", function () {
                var selectedOption = $(this).val();
                updateAutocompleteSource(selectedOption);
            });
        });

        function updateAutocompleteSource(selectedOption) {
            axios.post("/Search/selectCategory", { data: selectedOption })
                .then(function (response) {
                    console.log("success");

                    var autocompleteSource = response.data.tags;

                    console.log("data: " + response.data.tags);

                    $("#subcategorySelector").autocomplete({
                        source: autocompleteSource
                    });
                })
                .catch(function (error) {
                    console.log("Error:", error);
                });
        }
        $(document).ready(function () {
            var selectedOption = $("#categorySelector").val();
             updateAutocompleteSource(selectedOption);
        });

        document.getElementById("search").addEventListener("click", function () {

            var selectedCategoryName = $("#categorySelector option:selected").text(); // Get the selected category name
            //subcategory name
            var selectedSubCategory = document.getElementById("subcategorySelector").value;

            console.log(selectedCategoryName);
            console.log(selectedSubCategory);

            // Construct the URL with parameters
            var destinationURL = "/SearchResult/Index" +
                "?categoryName=" + encodeURIComponent(selectedCategoryName) +
                "&subCategoryName=" + encodeURIComponent(selectedSubCategory);

            // Redirect to the new URL
            window.location.href = destinationURL;

        })
    </script>

}
