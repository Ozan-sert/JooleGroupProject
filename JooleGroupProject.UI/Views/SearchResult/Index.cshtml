@model JooleGroupProject.UI.Models.SearchResultVM

@{
    ViewBag.Title = "SearchResult";
}

@{
    Layout = null;
}
<head>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />

    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">
    <link href="~/Content/searchResult.css" rel="stylesheet" />
</head>
<div>Header</div>


<div class="row">
    <div class="col-3 filter-container">
        <div class="filter">
            <!-- Filter section goes here -->
            <div class="filter-item row ">
                <div class="col-5 d-flex justify-content-center align-items-center p-2">
                    <p>Search:</p>
                </div>
                <div class="col-3 d-flex justify-content-center align-items-center  p-2">
                    <button onclick="filter()">
                        Save
                    </button>
                </div>
                <div class="col-4 d-flex justify-content-center align-items-center p-2">
                    <button onclick="reset()">
                        Clear
                    </button>
                </div>
            </div>
            <div class="filter-item row">
                <div class="col-6 d-flex justify-content-center align-items-center p-2" style="border-right:1px solid gray;"><p>Product</p></div>
                <div class="col-6 d-flex justify-content-center align-items-center p-2"><p>Project</p></div>
            </div>
            <div class="filter-item row clickable" id="product-type">

                <div class="col-9 d-flex justify-content-start align-items-center" style="padding-left:20px;"> <p>Product Type</p></div>
                <div class="col-3 p-2 d-flex justify-content-center align-items-center"> <i class="fas fa-caret-down fa-2x"></i></div>
            </div>

            <div class="filter-toggle justify-content-between" id="model-year" style="display:flex;">
                <div class="col-4  d-flex justify-content-center align-items-center "><p>Model year:</p></div>

                <div class="col-3  d-flex justify-content-center align-items-center p-2"><input id="year1" type="text"></div>
                <div class="col-2  d-flex justify-content-center align-items-center "><p>—</p></div>
                <div class="col-3  d-flex justify-content-center align-items-center p-2"><input id="year2" type="text"></div>
            </div>

            <div class="filter-item row clickable " id="product-tech" style="border-top:1px solid gray;">
                <div class="col-9 d-flex justify-content-start align-items-center" style="padding-left:20px;"> <p>Tech Specifications</p></div>
                <div class="col-3 p-2 d-flex justify-content-center align-items-center"> <i class="fas fa-caret-down fa-2x"></i></div>
            </div>

            <div id="tech-spec">

                @if (Model != null)
                {
                    var techSpecList = Model.techSpecFilters;
                    int i = 0;
                    foreach (var filter in techSpecList)
                    {
                        <div class="slider-label row">
                            <div class="col-3 py-3 d-flex justify-content-center align-items-center">
                                <i class="fa-solid fa-right-left"></i>
                            </div>
                            <div class="col-9 d-flex justify-content-start align-items-center" style="padding-left:0px;">
                                <p>@filter.AttributeName</p>
                            </div>

                        </div>
                        <input id="name_@i" type="hidden" value='@Html.Raw(Json.Encode(Model.techSpecFilters[i]))' />
                        <div class="slider row d-flex align-items-center">
                            <div class="col-3  py-1">
                                <input type="text" id="a_@i" readonly>
                            </div>
                            <div class="slider-item col-6 d-flex justify-content-center align-items-center" style="padding-left:20px;" id="slider-range_@i" data-min="@filter.MinValue" data-max="@filter.MaxValue"></div>
                            <div class="col-3 py-1">
                                <input type="text" id="b_@i" readonly>
                            </div>
                        </div>
                        i++;
                    }
                }

            </div>
        </div>
    </div>
    <div class="col-9">
        <!-- Products list goes here -->
        @if (Model != null)
        {
            <div>
                <p style="display:inline-block;"><strong>@Model.CategoryName > </strong>@Model.SubCategoryName </p> 
                <button onclick="compare()" style="display:inline-bloc;margin-right:30px; float:right;">Compare</button>
            </div>

            <div class="row" id="product-list">
                @Html.Partial("_ProductListPartial", Model.Products);
                @*@{
                    var productList = Model.Products.ToList();
                    foreach (var product in productList)
                    {
                        <div class="product-card col-3 text-center ">
                            <div class="product mx-2 ">
                                <div class="product-img">
                                    <img id="pimg_@product.ProductID" alt="@product.ProductName" src="~/Content/images/pimg_@(product.ProductID).jpg" />
                                </div>
                                <div class="basic-detail">
                                    <p>
                                        <strong>
                                            @product.Manufacturer <br />
                                            @product.Series<br />
                                            @product.Model<br />
                                        </strong>
                                    </p>
                                </div>
                                <div class="tech-detail">
                                    <p>
                                            TODO: get attributes by product id<br />
                                            @product.Manufacturer <br />
                                            @product.Series<br />
                                            @product.Model<br />
                                </div>
                                <div>
                                    <label><strong>Compare:</strong></label>
                                    <input type="checkbox" name="product" id="check_@product.ProductID" />
                                </div>
                            </div>
                        </div>
                    }
                }*@
            </div>
        }
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
<script src="https://kit.fontawesome.com/ada9f89ebf.js" crossorigin="anonymous"></script>
<script>
    $(document).ready(function () {
        $('#product-type').click(function () {
            $('#model-year').toggle();

            if($('#model-year').css('display') == 'none')
            {
                $('#product-type').css('border-bottom', 'none');
            }
            else
            {
                $('#product-type').css('border-bottom', '1px solid gray');
            }
        });
        $('#product-tech').click(function () {
            $('#tech-spec').toggle();
            if ($('#tech-spec').css('display') == 'none') {
                $('#product-tech').css('border-bottom', 'none');
            }
            else {
                $('#product-tech').css('border-bottom', '1px solid gray');
            }
        })
        $(function () {
            var cnt = @Model.techSpecFilters.Count();
            for (var i = 0; i < cnt; i++) {
                createSlider(i);
            }
        });

   });

   function createSlider(i) {
            var minValue = parseInt($("#slider-range_" + i).data('min'));
            var maxValue = parseInt($("#slider-range_" + i).data('max'));
            $("#slider-range_" + i).slider({
                range: true,
                min: minValue,
                max: maxValue,
                values: [minValue, maxValue],
                slide: function (event, ui) {
                    $("#a_" + i).val(ui.values[0]);
                    $("#b_" + i).val(ui.values[1]);
                }
            });
            $('#a_' + i).val(minValue);
            $('#b_' + i).val(maxValue);
        }

        function filter() {
            var year1 = $('#year1').val();
            var year2 = $('#year2').val();
            var subCategoryID = @Model.SubCategoryID;
            @*var filterValues = {};
            for (var i = 0; i < @Model.techSpecFilters.Count; i++) {
                var key = $('#name_' + i).val();
                var min = $('#a_' + i).val();
                var max = $('#b_' + i).val();
                filterValues[key] =  min+'-'+max;
            }*@
            var techSpecFilters = [];
            var filterValueStrings = [];

            for (var i = 0; i < @Model.techSpecFilters.Count; i++) {
                try {
                    var techSpecFilter = JSON.parse($('#name_' + i).val()); // Convert string representation to JS object

                } catch (error) {
                    console.error("Failed to parse JSON:", $('#name_' + i).val(), error);
                }
                var valueString = $('#a_' + i).val() + '-' + $('#b_' + i).val();

                techSpecFilters.push(techSpecFilter);
                filterValueStrings.push(valueString);
            }
            $.ajax({
                url: '@Url.Action("FilterProducts", "SearchResult")',
                type: 'POST',
                data: JSON.stringify({
                    year1: year1, year2: year2,
                    //filterValues: filterValues,
                    techSpecFilters: techSpecFilters,
                    filterValueStrings: filterValueStrings,
                    subCategoryID: subCategoryID
                }),
                contentType: 'application/json',  // You're sending JSON data
                dataType: 'html',
                success: function (data) {
                    $('#product-list').html(data);
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", status, error);
                }
            });
        }


</script>