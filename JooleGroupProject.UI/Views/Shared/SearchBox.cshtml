@model JooleGroupProject.UI.Models.SearchViewModel

<!DoCTYPE html>
<html>
<head>
    <script src="https://kit.fontawesome.com/5e8dc3bf55.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
        $(function () {
            var availableTags = [
                "ActionScript",
                "AppleScript",
                "Asp",
                "BASIC",
                "C",
                "C++",
                "Clojure",
                "COBOL",
                "ColdFusion",
                "Erlang",
                "Fortran",
                "Groovy",
                "Haskell",
                "Java",
                "JavaScript",
                "Lisp",
                "Perl",
                "PHP",
                "Python",
                "Ruby",
                "Scala",
                "Scheme"
            ];
            $("#tags").autocomplete({
                source: availableTags
            });
        });
    </script>

    <script>
        $( function() {
            var tags = @Html.Raw(Json.Encode(@Model.SubCategories));
            //tags = ["re", "ref", "refrig"];

            var tagObjects = tags.map(function (tag) {
                return {
                    key: tag.SubCategoryID,
                    label: tag.SubCategoryName
                };
            });

            $("#subcategorySelector").autocomplete({
                source: tagObjects,
            });
        })

    </script>

    <style>
        form {
            text-align: center;
            width: 600px;
            height: 30px;
        }

        select {
            display: inline-block;
            background-color: #1F71A7;
            height: 95%;
            border-radius: 5%;
            padding: 5px;
            font-size: 18%;
            border: 1px solid white;
            outline: none;
        }

        .searchBox {
            display: inline-block;
            margin-left: -2px;
            height: 95%;
            border-radius: 5%;
            width: 400px;
            font-size: 18%;
            border: 1px solid #1F71A7;
            outline: none;
        }

        .searchButton {
            display: inline-block;
            background-color: #1F71A7;
            height: 95%;
            border-radius: 10%;
            border: 1px solid white;
            outline: none;
        }
    </style>
</head>

<body>
    <div id="searchBox">
        <h1>@Model.selectedCategoryName</h1>
        <form>
            <select id="categorySelector" onchange="handleSelect()">
                @foreach (var category in @Model.Categories)
                {
                    <option value=@category.CategoryID style="background-color: white" selected=@Model.selectedCategoryID.Equals(@category.CategoryID)>@category.CategoryName</option>
                }
            </select>

            <input id="subcategorySelector" type="text" placeholder="Search" class="searchBox" />

            <button id="search" class="searchButton">
                <i class="fa-solid fa-magnifying-glass" style="color: white"></i>
            </button>

        </form>

        <div class="ui-widget">
            <label for="tags">Tags: </label>
            <input id="tags">
        </div>

    </div>


    <script>
        function handleSelect() {

            var selectedValue = document.getElementById("categorySelector").value;

            axios.post("/Search/selectCategory", {
                data: selectedValue
            })
                .then(function (response) {
                    console.log("successfully search");
                    document.getElementById("searchBox").innerHTML = response.data; 
                })
                .catch(function (error) {
                    console.error(error)
                })
        }

    </script>

    <script>


        document.getElementById("search").addEventListener("click", function () {
            //// category id
            //var selectedCategory = document.getElementById("categorySelector").value;
            ////subcategory name
            //var selectedSubCategory = document.getElementById("subcategorySelector").value;

            //axios.post("/Search/toResult", {
            //    data: selectedValue.SubCategoryID + "," + selectedValue.SubCategoryName
            //})
            //    .then(function (response) {
            //        console.log(response.data);
            //    })
            //    .catch(function (error) {
            //        console.error(error)
            //    })
        })
    </script>
</body>

</html>





